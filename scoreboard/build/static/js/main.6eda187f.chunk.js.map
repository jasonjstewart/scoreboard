{"version":3,"sources":["Team.js","TeamCard.js","ScoreboardTable.js","Hooks.js","NavTabs.js","navbar.js","layout.js","Rankings.js","ScheduleTable.js","App.js","index.js"],"names":["Team","props","populateScoreboard","dataarray","index","state","selectedTeams","length","fetch","sport","league","team","then","response","ok","json","Error","data","push","setState","teamData","loading","catch","error","console","log","message","testForMatchupScores","competitorIndex","nextEvent","competitions","competitors","abbreviation","testForNextEvent","shortName","testForProfessionalTeam","includes","testForRankingPlayoff","record","items","stats","value","rank","testForRecord","summary","displayValue","title","id","matchups","homeScores","awayScores","this","array","chunk_size","tempArray","myChunk","slice","tableData","j","uid","concat","score","className","alt","src","logos","href","displayName","replace","txt","charAt","toUpperCase","substr","toLowerCase","colSpan","undefined","standingSummary","newData","key","Component","useStyles","makeStyles","root","width","background","color","padding","media","height","margin","table","textAlign","fontSize","FirstCell","withStyles","TableCell","SecondCell","alignContent","verticalAlign","ThirdCell","fontWeight","TeamCard","classes","matchup","awayTeam","homeTeam","getHomeTeam","homeTeamRecord","awayTeamRecord","status","completed","period","OT","overtime_period","displayClock","type","detail","intoOT","location","venue","fullName","address","city","openToVenue","records","Card","CardContent","TableContainer","Table","component","Paper","TableRow","CardMedia","image","logo","align","TableFooter","target","rel","theme","head","backgroundColor","palette","common","black","white","body","default","flexGrow","alignItems","direction","justify","paper","ScoreboardTable","React","useState","setMatchups","isLoading","setIsLoading","useEffect","a","URL_API","events","games","i","fetchData","useFetchAppDataScoreboard","map","Grid","item","xs","container","spacing","NavBar","getDate","d","Date","month","getMonth","day","toggleNavbar","bind","collapsed","teams","teamsLoading","classOne","classTwo","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","currentPage","to","name","Layout","urlArr","window","split","getCurrentPage","Container","children","StyledTableCell","size","StyledTableRow","Rankings","minWidth","populateRankings","sports","index1","rankings","ranks","current","TableHead","leagues","TableBody","ScheduleTable","populateSchedule","pathname","joined","x","team1Record","team2Record","tableData1","getAwayTeam","season","date","class","App","exact","path","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.6eda187f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Team.css';\r\n\r\n/*\r\nCOMMENTS:\r\nFootball has no record element further down in the array currently, for bball this is what has conf record\r\n*/\r\n\r\nexport class Team extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n\t\t\tteam: props.team,\r\n\t\t\ttitle: props.title,\r\n            id: props.id,\r\n            matchups: [],\r\n            loading: true,\r\n            teamData: null,\r\n            sport: props.sport,\r\n            league: props.league,\r\n            homeScores: [],\r\n            awayScores: [],\r\n            selectedTeams: [\r\n                {\r\n                    team: 'BYU',\r\n                    sport: 'basketball',\r\n                    league: 'mens-college-basketball',\r\n                    id: 's:40~l:41~t:252'\r\n                },\r\n                {\r\n                    team: 'BYU',\r\n                    sport: 'football',\r\n                    league: 'college-football',\r\n                    id: 's:20~l:23~t:252'\r\n                },\r\n                {\r\n                    team: 'utah',\r\n                    sport: 'basketball',\r\n                    league: 'nba',\r\n                    id: 's:40~l:46~t:26'\r\n                },\r\n            ],\r\n            data: [],\r\n        };\r\n    }    \r\n\r\n    async componentDidMount() {\r\n        await this.populateScoreboard();\r\n    }\r\n\r\n    populateScoreboard = () => { \r\n        var dataarray =[];        \r\n        for (let index = 0; index < this.state.selectedTeams.length; index++) {\r\n        \r\n        fetch(`http://site.api.espn.com/apis/site/v2/sports/${this.state.selectedTeams[index].sport}/${this.state.selectedTeams[index].league}/teams/${this.state.selectedTeams[index].team}`)\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n\r\n                throw new Error(\"Unable to retrieve required data from server.\");\r\n            })\r\n            .then(data => {\r\n\r\n                dataarray.push(data)\r\n                this.setState({teamData: data, loading: false, data: dataarray})\r\n            })\r\n            .catch(function (error) {\r\n            console.log(\"Error: \", error.message);\r\n        });\r\n        }   \r\n    }\r\n\r\n    splitScoreTable (array, chunk_size) {\r\n        var tempArray = [];     \r\n        for (var index = 0; index < array.length; index += chunk_size) {\r\n            var myChunk = array.slice(index, index+chunk_size);\r\n            tempArray.push(myChunk);\r\n        }    \r\n        return tempArray;\r\n    }\r\n\r\n    testForMatchupScores = (competitorIndex, index) => {\r\n        try {\r\n            return this.state.data[index].team.nextEvent[0].competitions[0].competitors[competitorIndex].team.abbreviation;\r\n        }\r\n        catch {\r\n            return \"TBD\";\r\n        }\r\n    }\r\n\r\n    testForNextEvent = (index) => {\r\n        try {\r\n            return this.state.data[index].team.nextEvent[0].shortName;\r\n        }\r\n        catch {\r\n            return \"TBD\";\r\n        }\r\n    }\r\n\r\n    testForProfessionalTeam = (league) => {\r\n        var professionalLeagues = [\"nfl\",\"nba\",\"mlb\",\"nhl\",\"wnba\", \"usa.1\", \"uefa.champions\"];\r\n        if (professionalLeagues.includes(league)) {\r\n            return \"Playoff Seed:\";\r\n        }\r\n        else return \"AP Ranking:\"\r\n    }\r\n\r\n    testForRankingPlayoff = (index) => {\r\n        try {\r\n            return this.state.data[index].team.record.items[0].stats[0].value;\r\n        }\r\n        catch {\r\n            return this.state.data[index].team.rank;\r\n        }\r\n    }\r\n\r\n    testForRecord = (index) => {\r\n        try {\r\n            return this.state.data[index].team.record.items[0].summary;\r\n        }\r\n        catch {\r\n            return this.state.data[index].team.nextEvent[0].competitions[0].competitors[0].record[0].displayValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var tableData= [];\r\n\r\n        function toTitleCase(str) {\r\n            return str.replace(/\\w\\S*/g, function(txt){\r\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n            });\r\n        }\r\n        \r\n        if (this.state.loading===false){\r\n            //LOGIC NEEDED TO PRODUCE THE TABLE\r\n            //DECLARE VARIABLES\r\n            var homeScores\r\n            var awayScores\r\n            var teamData\r\n\r\n            for (let index = 0; index < this.state.data.length; index++) { //data[index] sub this for teamData\r\n                for (let j = 0; j < this.state.selectedTeams.length; j++) {\r\n                    if (this.state.selectedTeams[j].id===this.state.data[index].team.uid){\r\n                        teamData = this.state.selectedTeams[j]                        \r\n                    }\r\n                }\r\n                try {\r\n                    homeScores = this.state.homeScores.concat(this.state.data[index].team.nextEvent[0].competitions[0].competitors[0].score.displayValue);\r\n                    awayScores = this.state.awayScores.concat(this.state.data[index].team.nextEvent[0].competitions[0].competitors[1].score.displayValue);\r\n                }\r\n                catch {\r\n                    homeScores = 0\r\n                    awayScores = 0\r\n                }\r\n                tableData.push(\r\n                    <tbody className=\"scoreboard\">\r\n                        <tr>\r\n                            <td id=\"logo\">\r\n                                <img id=\"teamthumb\" alt=\"\" src={this.state.data[index].team.logos[0].href}/>\r\n                            </td>\r\n                            <td id=\"team-sport\">\r\n                                {this.state.data[index].team.displayName} {toTitleCase(teamData.sport)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Record:</td>\r\n                            <td id=\"scores\">\r\n                                {this.testForRecord(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                {this.testForProfessionalTeam(teamData.league)}\r\n                            </td>\r\n                            <td id=\"scores\">\r\n                                {this.testForRankingPlayoff(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Matchup:</td>\r\n                            <td id=\"scores\">\r\n                                {this.testForNextEvent(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Most Recent Score:</td>\r\n                            <td id=\"scores\">\r\n                                <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                &nbsp;{this.testForMatchupScores(1, index)} &nbsp;{awayScores}\r\n                                            </td>\r\n                                            <td>\r\n                                                &nbsp;{this.testForMatchupScores(0, index)}&nbsp; {homeScores}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <strong>\r\n                                    {this.state.data[index].team.standingSummary !== undefined ? this.state.data[index].team.standingSummary : \"Off Season\"}\r\n                                </strong>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                )   \r\n                }\r\n                //var splitData = this.splitScoreTable(tableData, tableData.length % 2 === 1 ? tableData.length/2 + 1 : tableData.length/2);\r\n                var newData = []\r\n                for (let index = 0; index < tableData.length; index=index+3) {\r\n                    newData.push(                                \r\n                        <div key={this.state.data[index].team.displayName} className=\"flexcontainer\">\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index]}\r\n                            </table>\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index+1]}\r\n                            </table>\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index+2]}\r\n                            </table>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                return (\r\n                    <div className=''> \r\n                        {newData}\r\n                    </div>\r\n                )\r\n           \r\n        }\r\n        else{\r\n        return(\r\n            <h1>Loading...</h1>\r\n        )}\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardHeader from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport { TableRow, TableCell, TableHead, TableContainer, withStyles, TableFooter } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n    background: \"transparent\",\r\n    color: 'white',\r\n    padding: 0\r\n  },\r\n  media: {\r\n    height: 30,\r\n    width: 30,\r\n    margin: 0,\r\n  },\r\n  table:{\r\n    margin:0,\r\n    textAlign: \"left\"\r\n  },\r\n  title:{\r\n    fontSize: 12\r\n  }\r\n});\r\n\r\nconst FirstCell = withStyles({\r\n  root:{\r\n    margin: 0,\r\n    padding: 2,\r\n  },\r\n  media:{\r\n    height: 2,\r\n    width: 2,\r\n    margin: 0,\r\n  }\r\n})(TableCell);\r\n\r\nconst SecondCell = withStyles({\r\n  root:{\r\n    margin: 0,\r\n    fontSize: 10,\r\n    alignContent: 'left',\r\n    verticalAlign: 'center',\r\n    padding: 0,\r\n    background: 'white',\r\n    width: 300,\r\n    padding: 5,\r\n  },\r\n})(TableCell);\r\n\r\nconst ThirdCell = withStyles({\r\n  root:{\r\n    width: '4vw',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n  },\r\n})(TableCell);\r\n\r\nexport default function TeamCard(props) {\r\n  const classes = useStyles();\r\n  console.log('INSIDE CARD:')\r\n  console.log(props.matchup)\r\n  var awayTeam=getAwayTeam(props.matchup)\r\n  var homeTeam=getHomeTeam(props.matchup)\r\n  console.log(homeTeam)\r\n  console.log(props.league)\r\n  var status = intoOT(props.matchup.status.type.completed, props.matchup.status.period, props.league, props.matchup)\r\n  let location = openToVenue(props.matchup)\r\n  var homeTeamRecord;\r\n  var awayTeamRecord;\r\n  homeTeam.records !== undefined ? homeTeamRecord = homeTeam.records[0].summary : homeTeamRecord = \"0-0\"\r\n  awayTeam.records !== undefined ? awayTeamRecord = awayTeam.records[0].summary : awayTeamRecord = \"0-0\"\r\n  \r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n      title={status}/>\r\n      <CardContent>\r\n        <TableContainer>\r\n          <Table className={classes.title}>\r\n              {status}\r\n          </Table>\r\n        </TableContainer>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table}>\r\n            <TableRow>\r\n              <FirstCell>\r\n              <CardMedia\r\n                  component=\"img\"\r\n                className={classes.media}\r\n                image={awayTeam.logo}\r\n                title=\"Logo\"/>\r\n              </FirstCell>\r\n              <SecondCell align=\"left\">\r\n                  {awayTeam.displayName} ({awayTeamRecord})\r\n              </SecondCell>\r\n              <ThirdCell>\r\n                  {props.matchup.competitors[0].score}\r\n              </ThirdCell>\r\n            </TableRow>\r\n          </Table>\r\n          </TableContainer>\r\n          <TableContainer component={Paper}>\r\n          <Table>\r\n          {/* <caption> {props.matchup.venue.fullName.includes(\"(\" || \")\") ? <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName}</a> : <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName} ({props.matchup.venue.address.city}, {props.matchup.venue.address.state})</a>}</caption> */}\r\n            <TableRow>\r\n              <FirstCell>\r\n              <CardMedia\r\n                component=\"img\"\r\n                className={classes.media}\r\n                image={homeTeam.logo}\r\n                title=\"Logo\"/>\r\n              </FirstCell>\r\n              <SecondCell align=\"left\">\r\n                  {homeTeam.displayName} ({homeTeamRecord})\r\n              </SecondCell>\r\n              <ThirdCell>\r\n                  {props.matchup.competitors[1].score}\r\n              </ThirdCell>\r\n              \r\n            </TableRow>\r\n          </Table>\r\n          <TableFooter >\r\n              &nbsp; &nbsp;{props.matchup.venue.fullName.includes(\"(\" || \")\") ? <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName}</a> : <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName} ({props.matchup.venue.address.city}, {props.matchup.venue.address.state})</a>}\r\n            </TableFooter>\r\n          </TableContainer>\r\n        </CardContent>        \r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\nfunction includeRankings(league, matchup){\r\n  if (league.includes('college')){\r\n                  \r\n      var AwayRanking = matchup.competitors[1].curatedRank.current\r\n      var  HomeRanking = matchup.competitors[0].curatedRank.current\r\n      if (HomeRanking > 25 || HomeRanking===0){\r\n          HomeRanking=''\r\n      }\r\n      if (AwayRanking > 25 || AwayRanking===0){\r\n          AwayRanking=''\r\n      }\r\n  }\r\n  return [HomeRanking, AwayRanking]\r\n}\r\n\r\nfunction intoOT(completed, period, league, matchup){\r\n  var OT;\r\n  if (league === \"college-football\"){\r\n      OT=5\r\n  }\r\n  else if (league=== \"nba\"){\r\n      OT=5\r\n  }\r\n  else if (league=== \"mens-college-basketball\"){\r\n      OT=3\r\n  }\r\n  else if (league=== \"nfl\"){\r\n      OT=5\r\n  }\r\n  else if (league=== \"mlb\"){\r\n      OT=10\r\n  }\r\n  else if (league=== \"nhl\"){\r\n      OT=4\r\n  }\r\n  if (completed === true) {\r\n      if (period === OT) {\r\n          return <b>FINAL/OT</b>\r\n      }\r\n      else if (matchup.status.period > OT){\r\n          if (league === 'mlb'){\r\n              return <b>FINAL/{period} innings</b>\r\n          }\r\n          else{\r\n              let overtime_period = period - (OT-1)\r\n              return <b>FINAL/{overtime_period}OT</b>\r\n          }\r\n      }\r\n      else {\r\n          return <b>FINAL</b>\r\n      }\r\n  }\r\n  else if (period < OT && period > 0) {\r\n      if(league !== 'mlb'){\r\n          return <span>Q{period} - {matchup.status.displayClock}</span>\r\n      }\r\n      else {\r\n          return matchup.status.type.detail //once games are live, figure out where innings are displayed in the response\r\n      }\r\n  } \r\n  else if (period === 0) {\r\n      return matchup.status.type.detail\r\n  } else {\r\n      \r\n  }\r\n}\r\n\r\nfunction getHomeTeam(matchup){\r\n  return matchup.competitors[0].team\r\n}\r\n\r\nfunction getAwayTeam(matchup){\r\n  return matchup.competitors[1].team\r\n}\r\n\r\nfunction getTeamIdentifier(league, team) {\r\n  if (league === 'college-football' && team.location.indexOf(' ') <= 0) {\r\n      return team.location;\r\n  }\r\n  else {\r\n      return team.abbreviation;\r\n  }\r\n}\r\n\r\nfunction openToVenue(matchup){\r\n  return \"https://www.google.com/maps/search/?api=1&query=\" + matchup.venue.fullName + \" \" + matchup.venue.address.city + \" \" + matchup.venue.address.state\r\n}","import React /*,{ useState }*/ from 'react';\r\n// import './Scoreboard.css';\r\nimport useFetchAppDataScoreboard from './Hooks';\r\n//import ScoreboardHTML from './Hooks';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Card, CardMedia } from '@material-ui/core';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport TeamCard from './TeamCard'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n      '&:nth-of-type(3)': {\r\n        backgroundColor: theme.palette.error //theme.palette.background.paper,\r\n      },\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.background.default,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        alignContent: 'space-between',\r\n        alignItems: 'center',\r\n        direction: 'row',\r\n        justify: 'space-evenly',\r\n    },\r\n    paper: {\r\n        height: 50,\r\n        width: 100,\r\n        margin: 'auto',\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function ScoreboardTable(props){\r\n    const classes = useStyles();\r\n    const [spacing, setSpacing] = React.useState(2);\r\n    //CONSTRUCTORS\r\n    const matchups = useFetchAppDataScoreboard(props.league, props.sport)\r\n\r\n    let status = '';\r\n    let team1Record = '';\r\n    let team2Record = '';\r\n    var AwayRanking;\r\n    var HomeRanking;\r\n\r\n    const handleChange = (event) => {\r\n        setSpacing(Number(event.target.value));\r\n      };\r\n\r\n    var tableData = matchups.map(matchup => {\r\n        var array = []\r\n        array.push(\r\n                <Grid item xs={12}>\r\n                    <TeamCard matchup={matchup} league={props.league} sport={props.sport}/>\r\n                </Grid>\r\n        )   \r\n        return array\r\n    })\r\n\r\n    return (\r\n        <Grid className={classes.root} container spacing={0}>\r\n            {tableData}\r\n        </Grid>\r\n    )\r\n}\r\n","import { useEffect, useState, useRef } from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import { UpdateScore } from './UpdateScore';\r\n//import React from 'react';\r\n\r\nexport default function useFetchAppDataScoreboard(league, sport) {\r\n    const [matchups, setMatchups] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (isLoading===true){\r\n            async function fetchData() {\r\n                const URL_API = `http://site.api.espn.com/apis/site/v2/sports/${sport}/${league}/scoreboard`;\r\n                let response = await fetch(URL_API)\r\n                //console.log(response)\r\n                let json = await response.json();\r\n                let events = json.events;\r\n                var games = [];\r\n                for (var i = 0; i < events.length; i++) {\r\n                    for (var j = 0; j < events[i].competitions.length; j++) {\r\n                        games.push(events[i].competitions[j]);\r\n                    }\r\n                }\r\n                setMatchups(matchups => matchups.concat(games))\r\n            }\r\n            fetchData()\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, setMatchups, sport, league])\r\n\r\n    return matchups;\r\n}\r\n\r\nexport function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Team } from './Team';\r\nimport ScoreboardTable from './ScoreboardTable.js';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function NavTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n        >\r\n          <LinkTab label=\"Personal Scoreboard\" to=\"/\" {...a11yProps(0)} />\r\n          <LinkTab label=\"College Football\" to=\"/CollegeFootball\" {...a11yProps(1)} />\r\n          <LinkTab label=\"College Basketball\" to=\"/CollegeBasketball\" {...a11yProps(2)} />\r\n          <LinkTab label=\"NBA\" to=\"/NBA\" {...a11yProps(3)} />\r\n          <LinkTab label=\"MLB\" to=\"/MLB\" {...a11yProps(4)} />\r\n          <LinkTab label=\"NFL\" to=\"/NFL\" {...a11yProps(5)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n         <Team />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <ScoreboardTable sport=\"basketball\" league=\"nba\"/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <ScoreboardTable sport=\"basketball\" league=\"mens-college-basketball\" />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <ScoreboardTable sport=\"basketball\" league=\"nba\"/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <ScoreboardTable sport=\"baseball\" league=\"mlb\"/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n       <ScoreboardTable sport=\"football\" league=\"nfl\"/>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nexport class NavBar extends Component {\r\n    static displayName = NavBar.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true,\r\n            teams: {},\r\n            teamsLoading: true,\r\n            month: 0,\r\n            day: 0,\r\n        };\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.populateList();\r\n    // }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n\r\n    // Determines the current date\r\n    getDate = () => {\r\n        var d = new Date();\r\n        var month = d.getMonth() + 1;\r\n        var day = d.getDate();\r\n        this.setState({ month: month, day: day });\r\n    }\r\n\r\n    render() {\r\n        const collapsed = this.state.collapsed;\r\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classTwo = collapsed ? 'navbar-toggler collapsed mr-auto' : 'navbar-toggler mr-auto';\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-light bg-light navbar-toggleable-md border-bottom box-shadow mb-3\">\r\n                    <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className={`${classOne}`} id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <Link className={this.props.currentPage === \"\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/\">Personal Scoreboard</Link>\r\n                            <Link className={this.props.currentPage === \"NBA\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NBA\">NBA</Link>\r\n                            <Link className={this.props.currentPage === \"CollegeFootball\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/CollegeFootball\">NCAAF</Link>\r\n                            <Link className={this.props.currentPage === \"CollegeBasketball\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/CollegeBasketball\">NCAAM</Link>\r\n                            <Link className={this.props.currentPage === \"NFL\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NFL\">NFL</Link>\r\n                            <Link className={this.props.currentPage === \"NHL\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NHL\">NHL</Link>                            \r\n                            <Link className={this.props.currentPage === \"MLB\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/MLB\">MLB</Link>\r\n                            <Link className={this.props.currentPage === \"MLS\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/MLS\">MLS</Link>\r\n                            <Link className={this.props.currentPage === \"ChampionsLeague\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/ChampionsLeague\">UEFA</Link>\r\n                            <Link className={this.props.currentPage === \"Rankings\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/Rankings\">Rankings</Link>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavTabs from './NavTabs.js';\r\nimport { Container } from 'reactstrap';\r\nimport { NavBar } from './navbar.js';\r\n\r\n\r\nexport class Layout extends Component {\r\n\tdisplayName = Layout.name\r\n\r\n\tgetCurrentPage() {\r\n\t\t// Splits URL into array and saves the last element\r\n\t\tlet url = window.location.href;\r\n\t\tlet urlArr = url.split(\"/\");\r\n\t\treturn urlArr[urlArr.length - 1];\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"body\">\r\n\t\t\t\t<NavBar id=\"navContent\" currentPage={this.getCurrentPage()}/>\r\n\t\t\t\t<Container id=\"bodyContent\">\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n// import { UpdateScore } from './UpdateScore';\r\nimport './Rankings.css';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n      fontSize: 24,\r\n    },\r\n    body: {\r\n      fontSize: 18,\r\n      size: 'medium',\r\n    },\r\n  }))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.background.default,\r\n\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nexport class Rankings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n            sports: [\r\n                [\"basketball\",\"mens-college-basketball\"],\r\n                [\"football\", \"college-football\"]\r\n            ],\r\n            data: [],\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateRankings();\r\n    }\r\n\r\n    populateRankings = () => { \r\n        var dataarray =[]\r\n        //console.log(this.state.sports.length)\r\n        for (let index = 0; index < this.state.sports.length; index++) {\r\n            //console.log(this.state.sports[index])\r\n            fetch(`http://site.api.espn.com/apis/site/v2/sports/${this.state.sports[index][0]}/${this.state.sports[index][1]}/rankings`)\r\n                .then(function (response) {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n    \r\n                    throw new Error(\"Unable to retrieve required data from server.\");\r\n                })\r\n                .then(data => {\r\n                    //console.log(data)\r\n                    dataarray.push(data)\r\n                    this.setState({loading: false,data: dataarray})\r\n                    //console.log(this.state.data)\r\n                    //console.log(this.state.data)\r\n                })\r\n                .catch(function (error) {\r\n                console.log(\"Error: \", error.message);\r\n            });\r\n            }   \r\n            // console.log(this.state.data)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading===false){\r\n            var newData = []\r\n            for (let index = 0; index < this.state.data.length; index++) {\r\n                var tableData = []\r\n                for (let index1 = 0; index1 < this.state.data[index].rankings[0].ranks.length; index1++) {\r\n                \r\n                    tableData.push(\r\n                        <TableRow  key={\"Rankings \" + this.state.sports[index][0] + \" \" + this.state.data[index].rankings[0].ranks[index1].current}>{/*example key=\"Rankings basketball 14\"*/}\r\n                            <StyledTableCell id=\"logo\"><img id=\"thumb\" alt=\"logo\" src={this.state.data[index].rankings[0].ranks[index1].team.logo}/></StyledTableCell>\r\n                            <StyledTableCell className=\"rank\">{this.state.data[index].rankings[0].ranks[index1].current}</StyledTableCell>\r\n                            <StyledTableCell> {this.state.data[index].rankings[0].ranks[index1].team.location} {this.state.data[index].rankings[0].ranks[index1].team.name}</StyledTableCell>\r\n                        </TableRow>\r\n                    )   \r\n                }\r\n                newData.push(\r\n                    <div key={\"Rankings \" + this.state.sports[index][1]} className=\"grid-item rankings\">{/*example key=\"Rankings mens-college-basketball\"*/}\r\n                        <TableContainer component={Paper} className=\"rankingsTable\">\r\n                            <Table aria-label=\"customized table\">\r\n                            <TableHead>\r\n                                \r\n                                    <StyledTableRow>\r\n                                        <StyledTableCell colSpan=\"3\">\r\n                                            {this.state.data[index].leagues[0].name} {this.state.data[index].rankings[0].name}\r\n                                        </StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                \r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tableData}\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                )\r\n\r\n            }\r\n\r\n            return(\r\n                <span className=\"flexcontainer\">\r\n                    {newData}\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )}\r\n    }\r\n}","import React, { Component } from 'react';\r\n//import { UpdateScore } from './UpdateScore';\r\nimport './Rankings.css';\r\n\r\nexport class ScheduleTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n\t\t\tteam: props.team,\r\n\t\t\ttitle: props.title,\r\n            id: props.id,\r\n            matchups: [],\r\n            loading: true,\r\n            sport: props.sport,\r\n            league: props.league,\r\n            homeScores: [],\r\n            awayScores: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateSchedule();\r\n    }\r\n\r\n    populateSchedule = () => { \r\n        this.setState({ matchups: [] })\r\n        fetch(`http://site.api.espn.com/apis/site/v2${window.location.pathname}`)\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n\r\n                throw new Error(\"Unable to retrieve required data from server.\");\r\n            })\r\n            .then(function (data) {\r\n                let events = data.events;\r\n                var games = [];\r\n                for (var i = 0; i < events.length; i++) {\r\n                    for (var j = 0; j < events[i].competitions.length; j++) {\r\n                        games.push(events[i].competitions[j]);\r\n                    }\r\n                }                \r\n                return games\r\n            })\r\n            .then(games => {\r\n                for (let index = 0; index < games.length; index++) {\r\n                    var joined = this.state.matchups.concat(games[index]);\r\n                    // var homeScores = this.state.homeScores.concat(games[index].competitors[1].score.displayValue);\r\n                    // var awayScores = this.state.awayScores.concat(games[index].competitors[0].score.displayValue);\r\n                    this.setState({ \r\n                        matchups: joined,\r\n                        // homeScores: homeScores,\r\n                        // awayScores: awayScores,\r\n                    })\r\n                }\r\n                this.setState({ loading: false })\r\n            })\r\n            .catch(function (error) {\r\n            console.log(\"Error: \", error.message);\r\n        });\r\n    }\r\n\r\n    getMatchup(x){\r\n        return this.state.matchups[x]\r\n    }\r\n\r\n    getHomeTeam(index){\r\n        return this.state.matchups[index].competitors[0]\r\n    }\r\n\r\n    getAwayTeam(index){\r\n        return this.state.matchups[index].competitors[1]\r\n    }\r\n\r\n    openToVenue(matchup){\r\n        return \"https://www.google.com/maps/search/?api=1&query=\" + matchup.venue.fullName + \" \" + matchup.venue.address.city + \" \" + matchup.venue.address.state;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading===false){\r\n            //let tableData = [];\r\n            let team1Record = '';\r\n            let team2Record = '';\r\n            //var AwayRanking;\r\n            //var HomeRanking;\r\n\r\n            // for (let x = 0; x < this.state.matchups.length; x++) {\r\n            //     if (this.state.season !== \"Off Season\") {\r\n            //         this.state.matchups[x].competitors[1].record !== undefined ? team1Record = this.state.matchups[x].competitors[1].record[0].displayValue : team1Record = \"0-0\"\r\n            //         this.state.matchups[x].competitors[0].record !== undefined ? team2Record = this.state.matchups[x].competitors[0].record[0].displayValue : team2Record = \"0-0\"\r\n            //     }\r\n            //     tableData.push(\r\n            //         <tbody className=\"scoreboard\">\r\n            //         <tr>\r\n            //             <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={this.state.matchups[x].competitors[1].team.logos[0].href}/></td>\r\n            //             {this.state.matchups[x].competitors[1].winner === true ? <td id=\"teams\"><strong>{AwayRanking} {this.state.matchups[x].competitors[1].team.displayName} <span id=\"record\">({team1Record})</span></strong></td>: <td id=\"teams\">{AwayRanking} {this.state.matchups[x].competitors[1].team.displayName} <span id=\"record\">({team1Record})</span></td>}\r\n            //             <UpdateScore index={x} teamIndex={1} sport={this.state.sport} league={this.state.league} scores={this.state.homeScores}/>\r\n            //         </tr>\r\n            //         <tr>\r\n            //             <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={this.state.matchups[x].competitors[0].team.logos[0].href}/></td>\r\n            //             {this.state.matchups[x].competitors[0].winner === true ? <td id=\"teams\"><strong>{HomeRanking} {this.state.matchups[x].competitors[0].team.displayName} <span id=\"record\">({team2Record})</span></strong></td>: <td id=\"teams\">{HomeRanking} {this.state.matchups[x].competitors[0].team.displayName} <span id=\"record\">({team2Record})</span></td>}\r\n            //             <UpdateScore index={x} teamIndex={0} sport={this.state.sport} league={this.state.league} scores={this.state.awayScores}/>\r\n            //         </tr>\r\n            //         <tr>\r\n            //             <td colSpan=\"3\">{this.state.matchups[x].date}</td>\r\n            //         </tr>            \r\n            //         </tbody>\r\n            //     )   \r\n            // }\r\n\r\n            var tableData1 = []\r\n            for (let index = 0; index < this.state.matchups.length; index++) {\r\n                //var matchup = this.getMatchup[index]\r\n                var homeTeam = this.getHomeTeam(index)\r\n                var awayTeam = this.getAwayTeam(index)\r\n                //let location = this.openToVenue(matchup)\r\n                if (this.state.season !== \"Off Season\") {\r\n                    this.state.matchups[index].competitors[0].record !== undefined ? team1Record = this.state.matchups[index].competitors[1].record[0].displayValue : team1Record = \"0-0\"\r\n                    this.state.matchups[index].competitors[1].record !== undefined ? team2Record = this.state.matchups[index].competitors[0].record[0].displayValue : team2Record = \"0-0\"\r\n                }\r\n                tableData1.push(\r\n                    <tr>\r\n                        <td>{this.state.matchups[index].date.substr(0,10)}</td>\r\n                        <td id=\"logo-schedule\"><img id=\"thumb\" alt=\"logo\" src={awayTeam.team.logos[0].href}/></td>\r\n                        <td class=\"schedule\">{awayTeam.team.location} ({team2Record})</td>\r\n                        <td>@</td>\r\n                        <td id=\"logo-schedule\"><img id=\"thumb\" alt=\"logo\" src={homeTeam.team.logos[0].href}/></td>\r\n                        <td class=\"schedule\">{homeTeam.team.location} ({team1Record})</td>\r\n                    </tr>\r\n                )   \r\n            }\r\n\r\n            return (\r\n                <div className=\"flexcontainer\">\r\n                    <table class=\"scheduleTable\"> \r\n                        <th colSpan=\"6\">{this.state.team} Schedule</th>\r\n                        {tableData1}\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )}\r\n    }\r\n}","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './layout';\r\nimport './App.css';\r\n//import { Scoreboard } from './Scoreboard';\r\nimport ScoreboardTable from './ScoreboardTable.js';\r\nimport { Team } from './Team';\r\nimport {Rankings} from './Rankings'\r\nimport { ScheduleTable } from './ScheduleTable';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n      < Layout >\r\n        <Route exact path='/'>\r\n          <Team />\r\n        </Route>\r\n        <Route path='/NBA'>\r\n            <ScoreboardTable sport=\"basketball\" league=\"nba\"/>\r\n        </Route>\r\n        <Route path='/CollegeBasketball'>\r\n          <ScoreboardTable sport=\"basketball\" league=\"mens-college-basketball\" />\r\n        </Route>\r\n        <Route path='/CollegeFootball'>\r\n          <ScoreboardTable sport=\"football\" league=\"college-football\"/>\r\n        </Route>\r\n        <Route path='/NFL'>\r\n          <ScoreboardTable sport=\"football\" league=\"nfl\"/>\r\n        </Route>\r\n        <Route path='/MLB'>\r\n          <ScoreboardTable sport=\"baseball\" league=\"mlb\"/>\r\n        </Route>  \r\n        <Route path='/NHL'>\r\n          <ScoreboardTable sport=\"hockey\" league=\"nhl\"/>\r\n        </Route>   \r\n        <Route path='/MLS'>\r\n          <ScoreboardTable sport=\"soccer\" league=\"usa.1\"/>\r\n        </Route>\r\n        <Route path='/ChampionsLeague'>\r\n          <ScoreboardTable sport=\"soccer\" league=\"uefa.champions\"/>\r\n        </Route>              \r\n        <Route path='/Rankings'>\r\n          <Rankings  />\r\n        </Route>\r\n        <Route path='/sports/'>\r\n          <ScheduleTable />\r\n        </Route>\r\n        <br/>\r\n      </Layout >\r\n    );\r\n  }\r\n\r\n  export default App;","import 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\n\r\nReactDOM.render(<BrowserRouter basename={baseUrl}>\r\n                    <App />\r\n                </BrowserRouter>, rootElement);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}