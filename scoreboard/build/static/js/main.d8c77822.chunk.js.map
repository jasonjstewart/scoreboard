{"version":3,"sources":["navbar.js","layout.js","ScoreboardTable.js","Hooks.js","Team.js","Rankings.js","ScheduleTable.js","App.js","index.js"],"names":["NavBar","props","getDate","d","Date","month","getMonth","day","setState","toggleNavbar","bind","state","collapsed","teams","teamsLoading","this","classOne","classTwo","className","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","currentPage","to","Component","displayName","name","Layout","urlArr","window","location","href","split","length","getCurrentPage","Container","children","ScoreboardTable","AwayRanking","matchups","league","sport","useState","setMatchups","isLoading","setIsLoading","useEffect","a","URL_API","fetch","response","json","events","games","i","j","competitions","push","concat","fetchData","useFetchAppDataScoreboard","status","team1Record","team2Record","tableData","map","matchup","array","homeTeam","competitors","getHomeTeam","awayTeam","getAwayTeam","undefined","records","summary","includeRankings","completed","period","OT","overtime_period","displayClock","detail","intoOT","venue","fullName","address","city","openToVenue","key","awayTeamBox","HomeRanking","alt","src","team","logo","winner","getTeamIdentifier","score","homeTeamBox","colSpan","includes","target","rel","newData","index","toString","curatedRank","current","indexOf","abbreviation","Team","populateScoreboard","dataarray","selectedTeams","then","ok","Error","data","teamData","loading","catch","error","console","log","message","testForMatchupScores","competitorIndex","nextEvent","testForNextEvent","shortName","testForProfessionalTeam","testForRankingPlayoff","record","items","stats","value","rank","testForRecord","displayValue","title","homeScores","awayScores","chunk_size","tempArray","myChunk","slice","uid","logos","replace","txt","charAt","toUpperCase","substr","toLowerCase","standingSummary","Rankings","populateRankings","sports","index1","rankings","ranks","leagues","ScheduleTable","populateSchedule","pathname","joined","x","tableData1","season","date","class","App","exact","path","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.d8c77822.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nexport class NavBar extends Component {\r\n    static displayName = NavBar.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true,\r\n            teams: {},\r\n            teamsLoading: true,\r\n            month: 0,\r\n            day: 0,\r\n        };\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.populateList();\r\n    // }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n\r\n    // Determines the current date\r\n    getDate = () => {\r\n        var d = new Date();\r\n        var month = d.getMonth() + 1;\r\n        var day = d.getDate();\r\n        this.setState({ month: month, day: day });\r\n    }\r\n\r\n    render() {\r\n        const collapsed = this.state.collapsed;\r\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classTwo = collapsed ? 'navbar-toggler collapsed mr-auto' : 'navbar-toggler mr-auto';\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-light bg-light navbar-toggleable-md border-bottom box-shadow mb-3\">\r\n                    <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className={`${classOne}`} id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <Link className={this.props.currentPage === \"\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/\">Personal Scoreboard</Link>\r\n                            <Link className={this.props.currentPage === \"NBA\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NBA\">NBA</Link>\r\n                            <Link className={this.props.currentPage === \"CollegeFootball\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/CollegeFootball\">NCAAF</Link>\r\n                            <Link className={this.props.currentPage === \"CollegeBasketball\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/CollegeBasketball\">NCAAM</Link>\r\n                            <Link className={this.props.currentPage === \"NFL\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NFL\">NFL</Link>\r\n                            <Link className={this.props.currentPage === \"NHL\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NHL\">NHL</Link>                            \r\n                            <Link className={this.props.currentPage === \"MLB\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/MLB\">MLB</Link>\r\n                            <Link className={this.props.currentPage === \"MLS\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/MLS\">MLS</Link>\r\n                            <Link className={this.props.currentPage === \"ChampionsLeague\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/ChampionsLeague\">UEFA</Link>\r\n                            <Link className={this.props.currentPage === \"Rankings\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/Rankings\">Rankings</Link>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavBar } from './navbar.js';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class Layout extends Component {\r\n\tdisplayName = Layout.name\r\n\r\n\tgetCurrentPage() {\r\n\t\t// Splits URL into array and saves the last element\r\n\t\tlet url = window.location.href;\r\n\t\tlet urlArr = url.split(\"/\");\r\n\t\treturn urlArr[urlArr.length - 1];\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"body\">\r\n\t\t\t\t<NavBar id=\"navContent\" currentPage={this.getCurrentPage()}/>\r\n\t\t\t\t<Container id=\"bodyContent\">\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React /*,{ useState }*/ from 'react';\r\nimport './Scoreboard.css';\r\nimport useFetchAppDataScoreboard from './Hooks';\r\n//import ScoreboardHTML from './Hooks';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function ScoreboardTable(props){\r\n\r\n    //CONSTRUCTORS\r\n    const matchups = useFetchAppDataScoreboard(props.league, props.sport)\r\n    //const [homeScores, setHomeScores] =useState([])\r\n    //const [awayScores, setAwayScores] =useState([])\r\n    \r\n    //let tableData = []\r\n    let status = '';\r\n    let team1Record = '';\r\n    let team2Record = '';\r\n    var AwayRanking;\r\n    var HomeRanking;\r\n\r\n\r\n    var tableData = matchups.map(matchup => {\r\n        var array = []\r\n        var homeTeam = getHomeTeam(matchup)\r\n        var awayTeam = getAwayTeam(matchup)\r\n        homeTeam.records !== undefined ? team1Record = homeTeam.records[0].summary : team1Record = \"0-0\"\r\n        awayTeam.records !== undefined ? team2Record = awayTeam.records[0].summary : team2Record = \"0-0\"\r\n        \r\n\r\n        AwayRanking = includeRankings(props.league, matchup)[1]\r\n        AwayRanking = includeRankings(props.league, matchup)[0]\r\n        status = intoOT(matchup.status.type.completed, matchup.status.period, props.league, matchup)\r\n\r\n        let location = openToVenue(matchup)\r\n        array.push(\r\n            <span key={matchup.id}>\r\n                <table className=\"card-table\">\r\n                <tbody className=\"scoreboard\">\r\n                {awayTeamBox(matchup, AwayRanking, team1Record, props)}\r\n                {homeTeamBox(matchup, HomeRanking, team2Record, props)}\r\n                <tr id=\"status\">\r\n                    <td colSpan=\"3\">{status}</td>\r\n                </tr>\r\n                </tbody>\r\n                </table>\r\n                <h5 colSpan=\"3\">\r\n                    {matchup.venue.fullName.includes(\"(\" || \")\") ? <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{matchup.venue.fullName}</a> : <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{matchup.venue.fullName} ({matchup.venue.address.city}, {matchup.venue.address.state})</a>}\r\n                </h5>\r\n                <br/>\r\n            </span>  \r\n        )   \r\n        return array\r\n    })\r\n\r\n    var newData = []\r\n    for (let index = 0; index < tableData.length; index=index+3) {\r\n        newData.push(\r\n            <div key={props.league + index.toString()} className=\"flexcontainer\">                        \r\n                {tableData[index]}\r\n                {tableData[index+1]}\r\n                {tableData[index+2]}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            {newData}\r\n        </div>\r\n    )\r\n}\r\n\r\n//HELPER FUNCTIONS TO BUILD HTML\r\nfunction includeRankings(league, matchup){\r\n    if (league.includes('college')){\r\n                    \r\n        var AwayRanking = matchup.competitors[1].curatedRank.current\r\n        var  HomeRanking = matchup.competitors[0].curatedRank.current\r\n        if (HomeRanking > 25 || HomeRanking===0){\r\n            HomeRanking=''\r\n        }\r\n        if (AwayRanking > 25 || AwayRanking===0){\r\n            AwayRanking=''\r\n        }\r\n    }\r\n    return [HomeRanking, AwayRanking]\r\n}\r\n\r\nfunction intoOT(completed, period, league, matchup){\r\n    var OT;\r\n    if (league === \"college-football\"){\r\n        OT=5\r\n    }\r\n    else if (league=== \"nba\"){\r\n        OT=5\r\n    }\r\n    else if (league=== \"mens-college-basketball\"){\r\n        OT=3\r\n    }\r\n    else if (league=== \"nfl\"){\r\n        OT=5\r\n    }\r\n    else if (league=== \"mlb\"){\r\n        OT=10\r\n    }\r\n    else if (league=== \"nhl\"){\r\n        OT=4\r\n    }\r\n    if (completed === true) {\r\n        if (period === OT) {\r\n            return <b>FINAL/OT</b>\r\n        }\r\n        else if (matchup.status.period > OT){\r\n            if (league === 'mlb'){\r\n                return <b>FINAL/{period} innings</b>\r\n            }\r\n            else{\r\n                let overtime_period = period - (OT-1)\r\n                return <b>FINAL/{overtime_period}OT</b>\r\n            }\r\n        }\r\n        else {\r\n            return <b>FINAL</b>\r\n        }\r\n    }\r\n    else if (period < OT && period > 0) {\r\n        if(league !== 'mlb'){\r\n            return <span>Q{period} - {matchup.status.displayClock}</span>\r\n        }\r\n        else {\r\n            return matchup.status.type.detail //once games are live, figure out where innings are displayed in the response\r\n        }\r\n    } \r\n    else if (period === 0) {\r\n        return matchup.status.type.detail\r\n    } else {\r\n        \r\n    }\r\n}\r\n\r\nfunction awayTeamBox(matchup, AwayRanking, team1Record, props){\r\n    return <tr>\r\n    <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={matchup.competitors[1].team.logo}/></td>\r\n    {matchup.competitors[1].winner === true ? \r\n    <td id=\"teams\">\r\n        <b>\r\n            <Link to={`sports/${props.sport}/${props.league}/teams/${getTeamIdentifier(props.league, matchup.competitors[1].team)}/schedule`}>\r\n                {AwayRanking} {matchup.competitors[1].team.displayName + \" \"} \r\n            </Link>    \r\n            <span id=\"record\">\r\n                ({team1Record})\r\n            </span>\r\n        </b>\r\n    </td>: \r\n    <td id=\"teams\">\r\n        <Link to={`sports/${props.sport}/${props.league}/teams/${getTeamIdentifier(props.league,matchup.competitors[1].team)}/schedule`}>\r\n            {awayTeamBox} {matchup.competitors[1].team.displayName + \" \"} \r\n        </Link>\r\n        <span id=\"record\">\r\n            ({team1Record})\r\n        </span>\r\n    </td>}\r\n    {/*/////THIS NEED TO BE FIXED***********************************************************/}\r\n    <td id=\"scores\">{matchup.competitors[1].score}</td>\r\n</tr>\r\n\r\n}\r\n\r\nfunction homeTeamBox(matchup, HomeRanking, team2Record, props){\r\n    return <tr>\r\n        <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={matchup.competitors[0].team.logo}/></td>\r\n        {matchup.competitors[0].winner === true ? \r\n        <td id=\"teams\">\r\n            <b>\r\n                <Link to={`sports/${props.sport}/${props.league}/teams/${getTeamIdentifier(props.league, matchup.competitors[0].team)}/schedule`}>\r\n                    {HomeRanking} {matchup.competitors[0].team.displayName + \" \"} \r\n                </Link>    \r\n                <span id=\"record\">\r\n                    ({team2Record})\r\n                </span>\r\n            </b>\r\n        </td>: \r\n        <td id=\"teams\">\r\n            <Link to={`sports/${props.sport}/${props.league}/teams/${getTeamIdentifier(props.league,matchup.competitors[0].team)}/schedule`}>\r\n                {HomeRanking} {matchup.competitors[0].team.displayName + \" \"} \r\n            </Link>\r\n            <span id=\"record\">\r\n                ({team2Record})\r\n            </span>\r\n        </td>}\r\n        {/*/////THIS NEED TO BE FIXED************************************************************/}\r\n        <td id=\"scores\">{matchup.competitors[0].score}</td>\r\n    </tr>\r\n}\r\n\r\n// function getMatchup(x, matchups){\r\n//     return matchups[x]\r\n// }\r\n\r\nfunction getHomeTeam(matchup){\r\n    return matchup.competitors[1]\r\n}\r\n\r\nfunction getAwayTeam(matchup){\r\n    return matchup.competitors[0]\r\n}\r\n\r\nfunction getTeamIdentifier(league, team) {\r\n    if (league === 'college-football' && team.location.indexOf(' ') <= 0) {\r\n        return team.location;\r\n    }\r\n    else {\r\n        return team.abbreviation;\r\n    }\r\n}\r\n\r\nfunction openToVenue(matchup){\r\n    return \"https://www.google.com/maps/search/?api=1&query=\" + matchup.venue.fullName + \" \" + matchup.venue.address.city + \" \" + matchup.venue.address.state;\r\n}\r\n\r\n","import { useEffect, useState, useRef } from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import { UpdateScore } from './UpdateScore';\r\n//import React from 'react';\r\n\r\nexport default function useFetchAppDataScoreboard(league, sport) {\r\n    const [matchups, setMatchups] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (isLoading===true){\r\n            async function fetchData() {\r\n                const URL_API = `http://site.api.espn.com/apis/site/v2/sports/${sport}/${league}/scoreboard`;\r\n                let response = await fetch(URL_API)\r\n                //console.log(response)\r\n                let json = await response.json();\r\n                let events = json.events;\r\n                var games = [];\r\n                for (var i = 0; i < events.length; i++) {\r\n                    for (var j = 0; j < events[i].competitions.length; j++) {\r\n                        games.push(events[i].competitions[j]);\r\n                    }\r\n                }\r\n                setMatchups(matchups => matchups.concat(games))\r\n            }\r\n            fetchData()\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, setMatchups, sport, league])\r\n\r\n    return matchups;\r\n}\r\n\r\nexport function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n","import React, { Component } from 'react';\r\n//import './Team.css';\r\n\r\n/*\r\nCOMMENTS:\r\nFootball has no record element further down in the array currently, for bball this is what has conf record\r\n*/\r\n\r\nexport class Team extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n\t\t\tteam: props.team,\r\n\t\t\ttitle: props.title,\r\n            id: props.id,\r\n            matchups: [],\r\n            loading: true,\r\n            teamData: null,\r\n            sport: props.sport,\r\n            league: props.league,\r\n            homeScores: [],\r\n            awayScores: [],\r\n            selectedTeams: [\r\n                {\r\n                    team: 'BYU',\r\n                    sport: 'basketball',\r\n                    league: 'mens-college-basketball',\r\n                    id: 's:40~l:41~t:252'\r\n                },\r\n                {\r\n                    team: 'BYU',\r\n                    sport: 'football',\r\n                    league: 'college-football',\r\n                    id: 's:20~l:23~t:252'\r\n                },\r\n                {\r\n                    team: 'utah',\r\n                    sport: 'basketball',\r\n                    league: 'nba',\r\n                    id: 's:40~l:46~t:26'\r\n                },\r\n            ],\r\n            data: [],\r\n        };\r\n    }    \r\n\r\n    async componentDidMount() {\r\n        await this.populateScoreboard();\r\n    }\r\n\r\n    populateScoreboard = () => { \r\n        var dataarray =[];        \r\n        for (let index = 0; index < this.state.selectedTeams.length; index++) {\r\n        \r\n        fetch(`http://site.api.espn.com/apis/site/v2/sports/${this.state.selectedTeams[index].sport}/${this.state.selectedTeams[index].league}/teams/${this.state.selectedTeams[index].team}`)\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n\r\n                throw new Error(\"Unable to retrieve required data from server.\");\r\n            })\r\n            .then(data => {\r\n\r\n                dataarray.push(data)\r\n                this.setState({teamData: data, loading: false, data: dataarray})\r\n            })\r\n            .catch(function (error) {\r\n            console.log(\"Error: \", error.message);\r\n        });\r\n        }   \r\n    }\r\n\r\n    splitScoreTable (array, chunk_size) {\r\n        var tempArray = [];     \r\n        for (var index = 0; index < array.length; index += chunk_size) {\r\n            var myChunk = array.slice(index, index+chunk_size);\r\n            tempArray.push(myChunk);\r\n        }    \r\n        return tempArray;\r\n    }\r\n\r\n    testForMatchupScores = (competitorIndex, index) => {\r\n        try {\r\n            return this.state.data[index].team.nextEvent[0].competitions[0].competitors[competitorIndex].team.abbreviation;\r\n        }\r\n        catch {\r\n            return \"TBD\";\r\n        }\r\n    }\r\n\r\n    testForNextEvent = (index) => {\r\n        try {\r\n            return this.state.data[index].team.nextEvent[0].shortName;\r\n        }\r\n        catch {\r\n            return \"TBD\";\r\n        }\r\n    }\r\n\r\n    testForProfessionalTeam = (league) => {\r\n        var professionalLeagues = [\"nfl\",\"nba\",\"mlb\",\"nhl\",\"wnba\", \"usa.1\", \"uefa.champions\"];\r\n        if (professionalLeagues.includes(league)) {\r\n            return \"Playoff Seed:\";\r\n        }\r\n        else return \"AP Ranking:\"\r\n    }\r\n\r\n    testForRankingPlayoff = (index) => {\r\n        try {\r\n            return this.state.data[index].team.record.items[0].stats[0].value;\r\n        }\r\n        catch {\r\n            return this.state.data[index].team.rank;\r\n        }\r\n    }\r\n\r\n    testForRecord = (index) => {\r\n        try {\r\n            return this.state.data[index].team.record.items[0].summary;\r\n        }\r\n        catch {\r\n            return this.state.data[index].team.nextEvent[0].competitions[0].competitors[0].record[0].displayValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var tableData= [];\r\n\r\n        function toTitleCase(str) {\r\n            return str.replace(/\\w\\S*/g, function(txt){\r\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n            });\r\n        }\r\n        \r\n        if (this.state.loading===false){\r\n            //LOGIC NEEDED TO PRODUCE THE TABLE\r\n            //DECLARE VARIABLES\r\n            var homeScores\r\n            var awayScores\r\n            var teamData\r\n\r\n            for (let index = 0; index < this.state.data.length; index++) { //data[index] sub this for teamData\r\n                for (let j = 0; j < this.state.selectedTeams.length; j++) {\r\n                    if (this.state.selectedTeams[j].id===this.state.data[index].team.uid){\r\n                        teamData = this.state.selectedTeams[j]                        \r\n                    }\r\n                }\r\n                try {\r\n                    homeScores = this.state.homeScores.concat(this.state.data[index].team.nextEvent[0].competitions[0].competitors[0].score.displayValue);\r\n                    awayScores = this.state.awayScores.concat(this.state.data[index].team.nextEvent[0].competitions[0].competitors[1].score.displayValue);\r\n                }\r\n                catch {\r\n                    homeScores = 0\r\n                    awayScores = 0\r\n                }\r\n                tableData.push(\r\n                    <tbody className=\"scoreboard\">\r\n                        <tr>\r\n                            <td id=\"logo\">\r\n                                <img id=\"teamthumb\" alt=\"\" src={this.state.data[index].team.logos[0].href}/>\r\n                            </td>\r\n                            <td id=\"team-sport\">\r\n                                {this.state.data[index].team.displayName} {toTitleCase(teamData.sport)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Record:</td>\r\n                            <td id=\"scores\">\r\n                                {this.testForRecord(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                {this.testForProfessionalTeam(teamData.league)}\r\n                            </td>\r\n                            <td id=\"scores\">\r\n                                {this.testForRankingPlayoff(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Matchup:</td>\r\n                            <td id=\"scores\">\r\n                                {this.testForNextEvent(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Most Recent Score:</td>\r\n                            <td id=\"scores\">\r\n                                <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                &nbsp;{this.testForMatchupScores(1, index)} &nbsp;{awayScores}\r\n                                            </td>\r\n                                            <td>\r\n                                                &nbsp;{this.testForMatchupScores(0, index)}&nbsp; {homeScores}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <strong>\r\n                                    {this.state.data[index].team.standingSummary !== undefined ? this.state.data[index].team.standingSummary : \"Off Season\"}\r\n                                </strong>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                )   \r\n                }\r\n                //var splitData = this.splitScoreTable(tableData, tableData.length % 2 === 1 ? tableData.length/2 + 1 : tableData.length/2);\r\n                var newData = []\r\n                for (let index = 0; index < tableData.length; index=index+3) {\r\n                    newData.push(                                \r\n                        <div key={this.state.data[index].team.displayName} className=\"flexcontainer\">\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index]}\r\n                            </table>\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index+1]}\r\n                            </table>\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index+2]}\r\n                            </table>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                return (\r\n                    <div className=''> \r\n                        {newData}\r\n                    </div>\r\n                )\r\n           \r\n        }\r\n        else{\r\n        return(\r\n            <h1>Loading...</h1>\r\n        )}\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\r\n// import { UpdateScore } from './UpdateScore';\r\nimport './Rankings.css';\r\n\r\nexport class Rankings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n            sports: [\r\n                [\"basketball\",\"mens-college-basketball\"],\r\n                [\"football\", \"college-football\"]\r\n            ],\r\n            data: [],\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateRankings();\r\n    }\r\n\r\n    populateRankings = () => { \r\n        var dataarray =[]\r\n        //console.log(this.state.sports.length)\r\n        for (let index = 0; index < this.state.sports.length; index++) {\r\n            //console.log(this.state.sports[index])\r\n            fetch(`http://site.api.espn.com/apis/site/v2/sports/${this.state.sports[index][0]}/${this.state.sports[index][1]}/rankings`)\r\n                .then(function (response) {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n    \r\n                    throw new Error(\"Unable to retrieve required data from server.\");\r\n                })\r\n                .then(data => {\r\n                    //console.log(data)\r\n                    dataarray.push(data)\r\n                    this.setState({loading: false,data: dataarray})\r\n                    //console.log(this.state.data)\r\n                    //console.log(this.state.data)\r\n                })\r\n                .catch(function (error) {\r\n                console.log(\"Error: \", error.message);\r\n            });\r\n            }   \r\n            // console.log(this.state.data)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading===false){\r\n            var newData = []\r\n            for (let index = 0; index < this.state.data.length; index++) {\r\n                var tableData = []\r\n                for (let index1 = 0; index1 < this.state.data[index].rankings[0].ranks.length; index1++) {\r\n                \r\n                    tableData.push(\r\n                        <tr key={\"Rankings \" + this.state.sports[index][0] + \" \" + this.state.data[index].rankings[0].ranks[index1].current}>{/*example key=\"Rankings basketball 14\"*/}\r\n                            <td id=\"logo\"><img id=\"thumb\" alt=\"logo\" src={this.state.data[index].rankings[0].ranks[index1].team.logo}/></td><td className=\"rank\">{this.state.data[index].rankings[0].ranks[index1].current}</td><td> {this.state.data[index].rankings[0].ranks[index1].team.location} {this.state.data[index].rankings[0].ranks[index1].team.name}</td>\r\n                        </tr>\r\n                    )   \r\n                }\r\n                newData.push(\r\n                    <div key={\"Rankings \" + this.state.sports[index][1]} className=\"grid-item rankings\">{/*example key=\"Rankings mens-college-basketball\"*/}\r\n                        <table className=\"rankingsTable\">\r\n                            <thead><tr><th colSpan=\"3\">{this.state.data[index].leagues[0].name} {this.state.data[index].rankings[0].name}</th></tr></thead>\r\n                            <tbody>{tableData}</tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n\r\n            }\r\n\r\n            return(\r\n                <span className=\"flexcontainer\">\r\n                    {newData}\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )}\r\n    }\r\n}","import React, { Component } from 'react';\r\n//import { UpdateScore } from './UpdateScore';\r\nimport './Rankings.css';\r\n\r\nexport class ScheduleTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n\t\t\tteam: props.team,\r\n\t\t\ttitle: props.title,\r\n            id: props.id,\r\n            matchups: [],\r\n            loading: true,\r\n            sport: props.sport,\r\n            league: props.league,\r\n            homeScores: [],\r\n            awayScores: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateSchedule();\r\n    }\r\n\r\n    populateSchedule = () => { \r\n        this.setState({ matchups: [] })\r\n        fetch(`http://site.api.espn.com/apis/site/v2${window.location.pathname}`)\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n\r\n                throw new Error(\"Unable to retrieve required data from server.\");\r\n            })\r\n            .then(function (data) {\r\n                let events = data.events;\r\n                var games = [];\r\n                for (var i = 0; i < events.length; i++) {\r\n                    for (var j = 0; j < events[i].competitions.length; j++) {\r\n                        games.push(events[i].competitions[j]);\r\n                    }\r\n                }                \r\n                return games\r\n            })\r\n            .then(games => {\r\n                for (let index = 0; index < games.length; index++) {\r\n                    var joined = this.state.matchups.concat(games[index]);\r\n                    // var homeScores = this.state.homeScores.concat(games[index].competitors[1].score.displayValue);\r\n                    // var awayScores = this.state.awayScores.concat(games[index].competitors[0].score.displayValue);\r\n                    this.setState({ \r\n                        matchups: joined,\r\n                        // homeScores: homeScores,\r\n                        // awayScores: awayScores,\r\n                    })\r\n                }\r\n                this.setState({ loading: false })\r\n            })\r\n            .catch(function (error) {\r\n            console.log(\"Error: \", error.message);\r\n        });\r\n    }\r\n\r\n    getMatchup(x){\r\n        return this.state.matchups[x]\r\n    }\r\n\r\n    getHomeTeam(index){\r\n        return this.state.matchups[index].competitors[0]\r\n    }\r\n\r\n    getAwayTeam(index){\r\n        return this.state.matchups[index].competitors[1]\r\n    }\r\n\r\n    openToVenue(matchup){\r\n        return \"https://www.google.com/maps/search/?api=1&query=\" + matchup.venue.fullName + \" \" + matchup.venue.address.city + \" \" + matchup.venue.address.state;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading===false){\r\n            //let tableData = [];\r\n            let team1Record = '';\r\n            let team2Record = '';\r\n            //var AwayRanking;\r\n            //var HomeRanking;\r\n\r\n            // for (let x = 0; x < this.state.matchups.length; x++) {\r\n            //     if (this.state.season !== \"Off Season\") {\r\n            //         this.state.matchups[x].competitors[1].record !== undefined ? team1Record = this.state.matchups[x].competitors[1].record[0].displayValue : team1Record = \"0-0\"\r\n            //         this.state.matchups[x].competitors[0].record !== undefined ? team2Record = this.state.matchups[x].competitors[0].record[0].displayValue : team2Record = \"0-0\"\r\n            //     }\r\n            //     tableData.push(\r\n            //         <tbody className=\"scoreboard\">\r\n            //         <tr>\r\n            //             <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={this.state.matchups[x].competitors[1].team.logos[0].href}/></td>\r\n            //             {this.state.matchups[x].competitors[1].winner === true ? <td id=\"teams\"><strong>{AwayRanking} {this.state.matchups[x].competitors[1].team.displayName} <span id=\"record\">({team1Record})</span></strong></td>: <td id=\"teams\">{AwayRanking} {this.state.matchups[x].competitors[1].team.displayName} <span id=\"record\">({team1Record})</span></td>}\r\n            //             <UpdateScore index={x} teamIndex={1} sport={this.state.sport} league={this.state.league} scores={this.state.homeScores}/>\r\n            //         </tr>\r\n            //         <tr>\r\n            //             <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={this.state.matchups[x].competitors[0].team.logos[0].href}/></td>\r\n            //             {this.state.matchups[x].competitors[0].winner === true ? <td id=\"teams\"><strong>{HomeRanking} {this.state.matchups[x].competitors[0].team.displayName} <span id=\"record\">({team2Record})</span></strong></td>: <td id=\"teams\">{HomeRanking} {this.state.matchups[x].competitors[0].team.displayName} <span id=\"record\">({team2Record})</span></td>}\r\n            //             <UpdateScore index={x} teamIndex={0} sport={this.state.sport} league={this.state.league} scores={this.state.awayScores}/>\r\n            //         </tr>\r\n            //         <tr>\r\n            //             <td colSpan=\"3\">{this.state.matchups[x].date}</td>\r\n            //         </tr>            \r\n            //         </tbody>\r\n            //     )   \r\n            // }\r\n\r\n            var tableData1 = []\r\n            for (let index = 0; index < this.state.matchups.length; index++) {\r\n                //var matchup = this.getMatchup[index]\r\n                var homeTeam = this.getHomeTeam(index)\r\n                var awayTeam = this.getAwayTeam(index)\r\n                //let location = this.openToVenue(matchup)\r\n                if (this.state.season !== \"Off Season\") {\r\n                    this.state.matchups[index].competitors[0].record !== undefined ? team1Record = this.state.matchups[index].competitors[1].record[0].displayValue : team1Record = \"0-0\"\r\n                    this.state.matchups[index].competitors[1].record !== undefined ? team2Record = this.state.matchups[index].competitors[0].record[0].displayValue : team2Record = \"0-0\"\r\n                }\r\n                tableData1.push(\r\n                    <tr>\r\n                        <td>{this.state.matchups[index].date.substr(0,10)}</td>\r\n                        <td id=\"logo-schedule\"><img id=\"thumb\" alt=\"logo\" src={awayTeam.team.logos[0].href}/></td>\r\n                        <td class=\"schedule\">{awayTeam.team.location} ({team2Record})</td>\r\n                        <td>@</td>\r\n                        <td id=\"logo-schedule\"><img id=\"thumb\" alt=\"logo\" src={homeTeam.team.logos[0].href}/></td>\r\n                        <td class=\"schedule\">{homeTeam.team.location} ({team1Record})</td>\r\n                    </tr>\r\n                )   \r\n            }\r\n\r\n            return (\r\n                <div className=\"flexcontainer\">\r\n                    <table class=\"scheduleTable\"> \r\n                        <th colSpan=\"6\">{this.state.team} Schedule</th>\r\n                        {tableData1}\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )}\r\n    }\r\n}","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './layout';\r\nimport './App.css';\r\n//import { Scoreboard } from './Scoreboard';\r\nimport ScoreboardTable from './ScoreboardTable.js';\r\nimport { Team } from './Team';\r\nimport {Rankings} from './Rankings'\r\nimport { ScheduleTable } from './ScheduleTable';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n      < Layout >\r\n        <Route exact path='/'>\r\n          <Team />\r\n        </Route>\r\n        <Route path='/NBA'>\r\n            <ScoreboardTable sport=\"basketball\" league=\"nba\"/>\r\n        </Route>\r\n        <Route path='/CollegeBasketball'>\r\n          <ScoreboardTable sport=\"basketball\" league=\"mens-college-basketball\" />\r\n        </Route>\r\n        <Route path='/CollegeFootball'>\r\n          <ScoreboardTable sport=\"football\" league=\"college-football\"/>\r\n        </Route>\r\n        <Route path='/NFL'>\r\n          <ScoreboardTable sport=\"football\" league=\"nfl\"/>\r\n        </Route>\r\n        <Route path='/MLB'>\r\n          <ScoreboardTable sport=\"baseball\" league=\"mlb\"/>\r\n        </Route>  \r\n        <Route path='/NHL'>\r\n          <ScoreboardTable sport=\"hockey\" league=\"nhl\"/>\r\n        </Route>   \r\n        <Route path='/MLS'>\r\n          <ScoreboardTable sport=\"soccer\" league=\"usa.1\"/>\r\n        </Route>\r\n        <Route path='/ChampionsLeague'>\r\n          <ScoreboardTable sport=\"soccer\" league=\"uefa.champions\"/>\r\n        </Route>              \r\n        <Route path='/Rankings'>\r\n          <Rankings  />\r\n        </Route>\r\n        <Route path='/sports/'>\r\n          <ScheduleTable />\r\n        </Route>\r\n        <br/>\r\n      </Layout >\r\n    );\r\n  }\r\n\r\n  export default App;","import 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\n\r\nReactDOM.render(<BrowserRouter basename={baseUrl}>\r\n                    <App />\r\n                </BrowserRouter>, rootElement);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}