{"version":3,"sources":["NavTabs.js","navbar.js","layout.js","TeamCard.js","ScoreboardTable.js","Hooks.js","Rankings.js","Team.js","ScheduleTable.js","App.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","onClick","event","preventDefault","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavTabs","classes","React","useState","setValue","console","log","rankings","className","AppBar","position","Tabs","variant","onChange","newValue","aria-label","label","href","NavBar","getDate","d","Date","month","getMonth","day","setState","toggleNavbar","bind","state","collapsed","teams","teamsLoading","this","classOne","classTwo","type","data-toggle","data-target","aria-controls","aria-expanded","currentPage","to","colSpan","Component","displayName","name","Layout","urlArr","window","location","split","length","getCurrentPage","Container","width","color","padding","media","height","margin","table","textAlign","FirstCell","withStyles","alignContent","TableCell","SecondCell","fontSize","verticalAlign","ThirdCell","fontWeight","TeamCard","matchup","awayTeam","competitors","team","homeTeam","getHomeTeam","league","homeTeamRecord","awayTeamRecord","status","completed","period","OT","overtime_period","displayClock","detail","intoOT","venue","fullName","address","city","openToVenue","undefined","records","summary","Card","title","CardContent","TableContainer","Table","Paper","TableRow","CardMedia","image","logo","align","score","TableFooter","includes","target","rel","head","common","black","white","body","error","default","alignItems","direction","justify","ScoreboardTable","tableData","sport","matchups","setMatchups","isLoading","setIsLoading","useEffect","a","URL_API","fetch","response","json","events","games","i","j","competitions","push","concat","fetchData","useFetchAppDataScoreboard","map","array","Grid","item","xs","replace","toUpperCase","container","spacing","RankingsTable","marginBottom","sports","rankingsOutput","setRankings","useFetchAppDataRankings","newData","index1","ranks","key","current","alt","src","leagues","TableBody","Team","populateScoreboard","dataarray","selectedTeams","then","ok","Error","data","teamData","loading","catch","message","testForMatchupScores","competitorIndex","nextEvent","abbreviation","testForNextEvent","shortName","testForProfessionalTeam","testForRankingPlayoff","record","items","stats","rank","testForRecord","displayValue","homeScores","awayScores","chunk_size","tempArray","myChunk","slice","uid","logos","txt","charAt","substr","toLowerCase","standingSummary","ScheduleTable","populateSchedule","pathname","joined","x","team1Record","team2Record","tableData1","getAwayTeam","season","date","class","App","exact","path","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.23a38694.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function NavTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  console.log(\"RANKINGS\")\r\n  console.log(props.rankings)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n        >\r\n          <LinkTab label=\"College Basketball\" href=\"/drafts\" {...a11yProps(0)} />\r\n          <LinkTab label=\"College Football\" href=\"/trash\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        {props.rankings[0]}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {props.rankings[1]}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nexport class NavBar extends Component {\r\n    static displayName = NavBar.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true,\r\n            teams: {},\r\n            teamsLoading: true,\r\n            month: 0,\r\n            day: 0,\r\n        };\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.populateList();\r\n    // }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n\r\n    // Determines the current date\r\n    getDate = () => {\r\n        var d = new Date();\r\n        var month = d.getMonth() + 1;\r\n        var day = d.getDate();\r\n        this.setState({ month: month, day: day });\r\n    }\r\n\r\n    render() {\r\n        const collapsed = this.state.collapsed;\r\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classTwo = collapsed ? 'navbar-toggler collapsed mr-auto' : 'navbar-toggler mr-auto';\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-light bg-light navbar-toggleable-md border-bottom box-shadow mb-3\">\r\n                    <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div id=\"navbarTitle\">\r\n                        <h1>\r\n                            Scoreboard\r\n                        </h1>\r\n                    </div>\r\n                    \r\n                    <div className={`${classOne}`} id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/\">Personal Scoreboard</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"NBA\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NBA\">NBA</Link>                                \r\n                                    </td>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"CollegeFootball\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/CollegeFootball\">NCAAF</Link>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"CollegeBasketball\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/CollegeBasketball\">NCAAM</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"NFL\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/NFL\">NFL</Link>                               \r\n                                    </td>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"MLB\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/MLB\">MLB</Link>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"MLS\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/MLS\">MLS</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"ChampionsLeague\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/ChampionsLeague\">UEFA</Link>                               \r\n                                    </td>\r\n                                    <td>\r\n                                        <Link className={this.props.currentPage === \"MLB\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/MLB\">MLB</Link>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td id=\"ranking\" colSpan=\"3\">\r\n                                        <Link className={this.props.currentPage === \"Rankings\" ? \"nav-item nav-link active\" : \"nav-item nav-link\"} to=\"/Rankings\">Rankings</Link>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavTabs from './NavTabs.js';\r\nimport { Container } from 'reactstrap';\r\nimport { NavBar } from './navbar.js';\r\n\r\n\r\nexport class Layout extends Component {\r\n\tdisplayName = Layout.name\r\n\r\n\tgetCurrentPage() {\r\n\t\t// Splits URL into array and saves the last element\r\n\t\tlet url = window.location.href;\r\n\t\tlet urlArr = url.split(\"/\");\r\n\t\treturn urlArr[urlArr.length - 1];\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"body\">\r\n\t\t\t\t<NavBar id=\"navContent\" currentPage={this.getCurrentPage()}/>\r\n\t\t\t\t<Container id=\"bodyContent\">\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardHeader from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport { TableRow, TableCell, TableHead, TableContainer, withStyles, TableFooter } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n    background: \"transparent\",\r\n    color: 'white',\r\n    padding: 0\r\n  },\r\n  media: {\r\n    height: 30,\r\n    width: 30,\r\n    margin: 0,\r\n  },\r\n  table:{\r\n    margin:0,\r\n    textAlign: \"left\"\r\n  }\r\n});\r\n\r\nconst FirstCell = withStyles({\r\n  root:{\r\n    alignContent: 'center',\r\n    padding: 4,\r\n  },\r\n  media:{\r\n    height: 2,\r\n    width: 2,\r\n    margin: 0,\r\n  }\r\n})(TableCell);\r\n\r\nconst SecondCell = withStyles({\r\n  root:{\r\n    margin: 0,\r\n    fontSize: 10,\r\n    alignContent: 'left',\r\n    verticalAlign: 'center',\r\n    padding: 0,\r\n    background: 'white',\r\n    width: 600,\r\n    padding: 5,\r\n  },\r\n})(TableCell);\r\n\r\nconst ThirdCell = withStyles({\r\n  root:{\r\n    background: 'lightgray',\r\n    width: '4vw',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n  },\r\n})(TableCell);\r\n\r\nexport default function TeamCard(props) {\r\n  const classes = useStyles();\r\n  console.log('INSIDE CARD:')\r\n  console.log(props.matchup)\r\n  var awayTeam=getAwayTeam(props.matchup)\r\n  var homeTeam=getHomeTeam(props.matchup)\r\n  console.log(homeTeam)\r\n  console.log(props.league)\r\n  var status = intoOT(props.matchup.status.type.completed, props.matchup.status.period, props.league, props.matchup)\r\n  let location = openToVenue(props.matchup)\r\n  var homeTeamRecord;\r\n  var awayTeamRecord;\r\n  homeTeam.records !== undefined ? homeTeamRecord = homeTeam.records[0].summary : homeTeamRecord = \"0-0\"\r\n  awayTeam.records !== undefined ? awayTeamRecord = awayTeam.records[0].summary : awayTeamRecord = \"0-0\"\r\n  \r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n      title={status}/>\r\n      <CardContent>\r\n        <TableContainer>\r\n          <Table>\r\n              {status}\r\n          </Table>\r\n        </TableContainer>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table}>\r\n            <TableRow>\r\n              <FirstCell>\r\n              <CardMedia\r\n                  component=\"img\"\r\n                className={classes.media}\r\n                image={awayTeam.logo}\r\n                title=\"Logo\"/>\r\n              </FirstCell>\r\n              <SecondCell align=\"left\">\r\n                  {awayTeam.displayName} ({awayTeamRecord})\r\n              </SecondCell>\r\n              <ThirdCell>\r\n                  {props.matchup.competitors[0].score}\r\n              </ThirdCell>\r\n            </TableRow>\r\n          </Table>\r\n          </TableContainer>\r\n          <TableContainer component={Paper}>\r\n          <Table>\r\n          {/* <caption> {props.matchup.venue.fullName.includes(\"(\" || \")\") ? <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName}</a> : <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName} ({props.matchup.venue.address.city}, {props.matchup.venue.address.state})</a>}</caption> */}\r\n            <TableRow>\r\n              <FirstCell>\r\n              <CardMedia\r\n                component=\"img\"\r\n                className={classes.media}\r\n                image={homeTeam.logo}\r\n                title=\"Logo\"/>\r\n              </FirstCell>\r\n              <SecondCell align=\"left\">\r\n                  {homeTeam.displayName} ({homeTeamRecord})\r\n              </SecondCell>\r\n              <ThirdCell>\r\n                  {props.matchup.competitors[1].score}\r\n              </ThirdCell>\r\n              \r\n            </TableRow>\r\n          </Table>\r\n          <TableFooter >\r\n              &nbsp; &nbsp;{props.matchup.venue.fullName.includes(\"(\" || \")\") ? <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName}</a> : <a href={location} target=\"_blank\" rel=\"noopener noreferrer\" id=\"venue\">{props.matchup.venue.fullName} ({props.matchup.venue.address.city}, {props.matchup.venue.address.state})</a>}\r\n            </TableFooter>\r\n          </TableContainer>\r\n        </CardContent>        \r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\nfunction includeRankings(league, matchup){\r\n  if (league.includes('college')){\r\n                  \r\n      var AwayRanking = matchup.competitors[1].curatedRank.current\r\n      var  HomeRanking = matchup.competitors[0].curatedRank.current\r\n      if (HomeRanking > 25 || HomeRanking===0){\r\n          HomeRanking=''\r\n      }\r\n      if (AwayRanking > 25 || AwayRanking===0){\r\n          AwayRanking=''\r\n      }\r\n  }\r\n  return [HomeRanking, AwayRanking]\r\n}\r\n\r\nfunction intoOT(completed, period, league, matchup){\r\n  var OT;\r\n  if (league === \"college-football\"){\r\n      OT=5\r\n  }\r\n  else if (league=== \"nba\"){\r\n      OT=5\r\n  }\r\n  else if (league=== \"mens-college-basketball\"){\r\n      OT=3\r\n  }\r\n  else if (league=== \"nfl\"){\r\n      OT=5\r\n  }\r\n  else if (league=== \"mlb\"){\r\n      OT=10\r\n  }\r\n  else if (league=== \"nhl\"){\r\n      OT=4\r\n  }\r\n  if (completed === true) {\r\n      if (period === OT) {\r\n          return <b>FINAL/OT</b>\r\n      }\r\n      else if (matchup.status.period > OT){\r\n          if (league === 'mlb'){\r\n              return <b>FINAL/{period} innings</b>\r\n          }\r\n          else{\r\n              let overtime_period = period - (OT-1)\r\n              return <b>FINAL/{overtime_period}OT</b>\r\n          }\r\n      }\r\n      else {\r\n          return <b>FINAL</b>\r\n      }\r\n  }\r\n  else if (period < OT && period > 0) {\r\n      if(league !== 'mlb'){\r\n          return <span>Q{period} - {matchup.status.displayClock}</span>\r\n      }\r\n      else {\r\n          return matchup.status.type.detail //once games are live, figure out where innings are displayed in the response\r\n      }\r\n  } \r\n  else if (period === 0) {\r\n      return matchup.status.type.detail\r\n  } else {\r\n      \r\n  }\r\n}\r\n\r\nfunction getHomeTeam(matchup){\r\n  return matchup.competitors[0].team\r\n}\r\n\r\nfunction getAwayTeam(matchup){\r\n  return matchup.competitors[1].team\r\n}\r\n\r\nfunction getTeamIdentifier(league, team) {\r\n  if (league === 'college-football' && team.location.indexOf(' ') <= 0) {\r\n      return team.location;\r\n  }\r\n  else {\r\n      return team.abbreviation;\r\n  }\r\n}\r\n\r\nfunction openToVenue(matchup){\r\n  return \"https://www.google.com/maps/search/?api=1&query=\" + matchup.venue.fullName + \" \" + matchup.venue.address.city + \" \" + matchup.venue.address.state\r\n}","import React /*,{ useState }*/ from 'react';\r\n// import './Scoreboard.css';\r\nimport useFetchAppDataScoreboard from './Hooks';\r\n//import ScoreboardHTML from './Hooks';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Card, CardMedia } from '@material-ui/core';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport TeamCard from './TeamCard'\r\nimport './ScoreboardStyles.css';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n      '&:nth-of-type(3)': {\r\n        backgroundColor: theme.palette.error //theme.palette.background.paper,\r\n      },\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.background.default,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        alignContent: 'space-between',\r\n        alignItems: 'center',\r\n        direction: 'row',\r\n        justify: 'space-evenly',\r\n    },\r\n    paper: {\r\n        height: 50,\r\n        width: 100,\r\n        margin: 'auto',\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function ScoreboardTable(props){\r\n    const classes = useStyles();\r\n    const [spacing, setSpacing] = React.useState(2);\r\n    //CONSTRUCTORS\r\n    const matchups = useFetchAppDataScoreboard(props.league, props.sport)\r\n\r\n    let status = '';\r\n    let team1Record = '';\r\n    let team2Record = '';\r\n    var AwayRanking;\r\n    var HomeRanking;\r\n\r\n    const handleChange = (event) => {\r\n        setSpacing(Number(event.target.value));\r\n      };\r\n\r\n    var tableData = matchups.map(matchup => {\r\n        var array = []\r\n        array.push(\r\n                <Grid item xs={12}>\r\n                    <TeamCard matchup={matchup} league={props.league} sport={props.sport}/>\r\n                </Grid>\r\n        )   \r\n        return array\r\n    })\r\n\r\n    return (\r\n      <span>\r\n        <div id=\"ScoreboardNameTitle\">\r\n          {props.league.replace(\"-\",\" \").toUpperCase()}\r\n        </div>\r\n        <Grid className={classes.root} container spacing={0}>\r\n            {tableData}\r\n        </Grid>\r\n      </span>\r\n    )\r\n}\r\n","import { useEffect, useState, useRef } from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import { UpdateScore } from './UpdateScore';\r\n//import React from 'react';\r\n\r\nexport default function useFetchAppDataScoreboard(league, sport) {\r\n    const [matchups, setMatchups] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (isLoading===true){\r\n            async function fetchData() {\r\n                const URL_API = `http://site.api.espn.com/apis/site/v2/sports/${sport}/${league}/scoreboard`;\r\n                let response = await fetch(URL_API)\r\n                //console.log(response)\r\n                let json = await response.json();\r\n                let events = json.events;\r\n                var games = [];\r\n                for (var i = 0; i < events.length; i++) {\r\n                    for (var j = 0; j < events[i].competitions.length; j++) {\r\n                        games.push(events[i].competitions[j]);\r\n                    }\r\n                }\r\n                setMatchups(matchups => matchups.concat(games))\r\n            }\r\n            fetchData()\r\n            setIsLoading(false)\r\n        }\r\n    }, [isLoading, setMatchups, sport, league])\r\n\r\n    return matchups;\r\n}\r\n\r\nexport function useFetchAppDataRankings(sports) {\r\n  const [rankings, setRankings] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n      if (isLoading===true){\r\n          async function fetchData() {\r\n              for (let index = 0; index < sports.length; index++) {\r\n                let response = await fetch(`http://site.api.espn.com/apis/site/v2/sports/${sports[index][0]}/${sports[index][1]}/rankings`)\r\n                console.log(response)\r\n                let json = await response.json();\r\n                setRankings(rankings => rankings.concat(json))\r\n              }\r\n          }\r\n          fetchData()\r\n          setIsLoading(false)\r\n      }\r\n  }, [isLoading, setRankings, sports])\r\n\r\n  return rankings;\r\n}\r\n\r\nexport function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n","import React, { Component } from 'react';\r\n// import { UpdateScore } from './UpdateScore';\r\n// import './Rankings.css';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useFetchAppDataRankings } from './Hooks.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport NavTabs from './NavTabs'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: 100,\r\n      background: \"transparent\",\r\n      color: 'white',\r\n      padding: 0\r\n    },\r\n    media: {\r\n      height: 15,\r\n      width: 300,\r\n      margin: 0,\r\n    },\r\n    table:{\r\n      margin:0,\r\n      textAlign: \"left\"\r\n    },\r\n    RankingsTable:{\r\n        marginBottom: 100\r\n    }\r\n  });\r\n  \r\n  const FirstCell = withStyles({\r\n    root:{\r\n      alignContent: 'center',\r\n      padding: 4,\r\n      width: 5,\r\n      margin: 0,\r\n    },\r\n    media:{\r\n      height: 2,\r\n      width: 2,\r\n      margin: 0,\r\n    }\r\n  })(TableCell);\r\n  \r\n  const SecondCell = withStyles({\r\n    root:{\r\n      margin: 0,\r\n      fontSize: 10,\r\n      alignContent: 'left',\r\n      verticalAlign: 'center',\r\n      padding: 0,\r\n      background: 'white',\r\n      width: 25,\r\n      padding: 5,\r\n      fontWeight: 'bold',\r\n    },\r\n  })(TableCell);\r\n  \r\n  const ThirdCell = withStyles({\r\n    root:{\r\n      background: 'lightgray',\r\n      width: 10,\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n      fontSize: 12,\r\n    },\r\n  })(TableCell);\r\n\r\nexport default function RankingsTable(props){\r\n    const sports = [\r\n            [\"basketball\",\"mens-college-basketball\"],[\"football\", \"college-football\"]\r\n        ]\r\n    const rankingsOutput = useFetchAppDataRankings(sports)\r\n    console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\r\n    console.log(rankingsOutput)\r\n    var classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n      };\r\n\r\n    var newData = []\r\n    for (let index = 0; index < rankingsOutput.length; index++) {\r\n        var tableData = []\r\n        for (let index1 = 0; index1 < rankingsOutput[index].rankings[0].ranks.length; index1++) {\r\n        \r\n            tableData.push(\r\n                <TableRow  key={\"Rankings \" + sports[index][0] + \" \" + rankingsOutput[index].rankings[0].ranks[index1].current}>{/*example key=\"Rankings basketball 14\"*/}\r\n                    <FirstCell id=\"logo\"><img className={classes.media} id=\"thumb\" alt=\"logo\" src={rankingsOutput[index].rankings[0].ranks[index1].team.logo}/></FirstCell>\r\n                    <SecondCell className=\"rank\">{rankingsOutput[index].rankings[0].ranks[index1].current}</SecondCell>\r\n                    <ThirdCell> {rankingsOutput[index].rankings[0].ranks[index1].team.location} {rankingsOutput[index].rankings[0].ranks[index1].team.name}</ThirdCell>\r\n                </TableRow>\r\n            )   \r\n        }\r\n        newData.push(\r\n            <TableContainer component={Paper} className=\"rankingsTable\">\r\n                <Table aria-label=\"customized table\" className={classes.table}>\r\n                <TableRow colSpan=\"3\">\r\n                    {rankingsOutput[index].leagues[0].name} {rankingsOutput[index].rankings[0].name}\r\n                </TableRow>\r\n                <TableBody>\r\n                    {tableData}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <NavTabs rankings={newData}/>\r\n\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Team.css';\r\n\r\n/*\r\nCOMMENTS:\r\nFootball has no record element further down in the array currently, for bball this is what has conf record\r\n*/\r\n\r\nexport class Team extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n\t\t\tteam: props.team,\r\n\t\t\ttitle: props.title,\r\n            id: props.id,\r\n            matchups: [],\r\n            loading: true,\r\n            teamData: null,\r\n            sport: props.sport,\r\n            league: props.league,\r\n            homeScores: [],\r\n            awayScores: [],\r\n            selectedTeams: [\r\n                {\r\n                    team: 'BYU',\r\n                    sport: 'basketball',\r\n                    league: 'mens-college-basketball',\r\n                    id: 's:40~l:41~t:252'\r\n                },\r\n                {\r\n                    team: 'BYU',\r\n                    sport: 'football',\r\n                    league: 'college-football',\r\n                    id: 's:20~l:23~t:252'\r\n                },\r\n                {\r\n                    team: 'utah',\r\n                    sport: 'basketball',\r\n                    league: 'nba',\r\n                    id: 's:40~l:46~t:26'\r\n                },\r\n            ],\r\n            data: [],\r\n        };\r\n    }    \r\n\r\n    async componentDidMount() {\r\n        await this.populateScoreboard();\r\n    }\r\n\r\n    populateScoreboard = () => { \r\n        var dataarray =[];        \r\n        for (let index = 0; index < this.state.selectedTeams.length; index++) {\r\n        \r\n        fetch(`http://site.api.espn.com/apis/site/v2/sports/${this.state.selectedTeams[index].sport}/${this.state.selectedTeams[index].league}/teams/${this.state.selectedTeams[index].team}`)\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n\r\n                throw new Error(\"Unable to retrieve required data from server.\");\r\n            })\r\n            .then(data => {\r\n\r\n                dataarray.push(data)\r\n                this.setState({teamData: data, loading: false, data: dataarray})\r\n            })\r\n            .catch(function (error) {\r\n            console.log(\"Error: \", error.message);\r\n        });\r\n        }   \r\n    }\r\n\r\n    splitScoreTable (array, chunk_size) {\r\n        var tempArray = [];     \r\n        for (var index = 0; index < array.length; index += chunk_size) {\r\n            var myChunk = array.slice(index, index+chunk_size);\r\n            tempArray.push(myChunk);\r\n        }    \r\n        return tempArray;\r\n    }\r\n\r\n    testForMatchupScores = (competitorIndex, index) => {\r\n        try {\r\n            return this.state.data[index].team.nextEvent[0].competitions[0].competitors[competitorIndex].team.abbreviation;\r\n        }\r\n        catch {\r\n            return \"TBD\";\r\n        }\r\n    }\r\n\r\n    testForNextEvent = (index) => {\r\n        try {\r\n            return this.state.data[index].team.nextEvent[0].shortName;\r\n        }\r\n        catch {\r\n            return \"TBD\";\r\n        }\r\n    }\r\n\r\n    testForProfessionalTeam = (league) => {\r\n        var professionalLeagues = [\"nfl\",\"nba\",\"mlb\",\"nhl\",\"wnba\", \"usa.1\", \"uefa.champions\"];\r\n        if (professionalLeagues.includes(league)) {\r\n            return \"Playoff Seed:\";\r\n        }\r\n        else return \"AP Ranking:\"\r\n    }\r\n\r\n    testForRankingPlayoff = (index) => {\r\n        try {\r\n            return this.state.data[index].team.record.items[0].stats[0].value;\r\n        }\r\n        catch {\r\n            return this.state.data[index].team.rank;\r\n        }\r\n    }\r\n\r\n    testForRecord = (index) => {\r\n        try {\r\n            return this.state.data[index].team.record.items[0].summary;\r\n        }\r\n        catch {\r\n            return this.state.data[index].team.nextEvent[0].competitions[0].competitors[0].record[0].displayValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var tableData= [];\r\n\r\n        function toTitleCase(str) {\r\n            return str.replace(/\\w\\S*/g, function(txt){\r\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n            });\r\n        }\r\n        \r\n        if (this.state.loading===false){\r\n            //LOGIC NEEDED TO PRODUCE THE TABLE\r\n            //DECLARE VARIABLES\r\n            var homeScores\r\n            var awayScores\r\n            var teamData\r\n\r\n            for (let index = 0; index < this.state.data.length; index++) { //data[index] sub this for teamData\r\n                for (let j = 0; j < this.state.selectedTeams.length; j++) {\r\n                    if (this.state.selectedTeams[j].id===this.state.data[index].team.uid){\r\n                        teamData = this.state.selectedTeams[j]                        \r\n                    }\r\n                }\r\n                try {\r\n                    homeScores = this.state.homeScores.concat(this.state.data[index].team.nextEvent[0].competitions[0].competitors[0].score.displayValue);\r\n                    awayScores = this.state.awayScores.concat(this.state.data[index].team.nextEvent[0].competitions[0].competitors[1].score.displayValue);\r\n                }\r\n                catch {\r\n                    homeScores = 0\r\n                    awayScores = 0\r\n                }\r\n                tableData.push(\r\n                    <tbody className=\"scoreboard\">\r\n                        <tr>\r\n                            <td id=\"logo\">\r\n                                <img id=\"teamthumb\" alt=\"\" src={this.state.data[index].team.logos[0].href}/>\r\n                            </td>\r\n                            <td id=\"team-sport\">\r\n                                {this.state.data[index].team.displayName} {toTitleCase(teamData.sport)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Record:</td>\r\n                            <td id=\"scores\">\r\n                                {this.testForRecord(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                {this.testForProfessionalTeam(teamData.league)}\r\n                            </td>\r\n                            <td id=\"scores\">\r\n                                {this.testForRankingPlayoff(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Matchup:</td>\r\n                            <td id=\"scores\">\r\n                                {this.testForNextEvent(index)}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Most Recent Score:</td>\r\n                            <td id=\"scores\">\r\n                                <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                &nbsp;{this.testForMatchupScores(1, index)} &nbsp;{awayScores}\r\n                                            </td>\r\n                                            <td>\r\n                                                &nbsp;{this.testForMatchupScores(0, index)}&nbsp; {homeScores}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <strong>\r\n                                    {this.state.data[index].team.standingSummary !== undefined ? this.state.data[index].team.standingSummary : \"Off Season\"}\r\n                                </strong>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                )   \r\n                }\r\n                //var splitData = this.splitScoreTable(tableData, tableData.length % 2 === 1 ? tableData.length/2 + 1 : tableData.length/2);\r\n                var newData = []\r\n                for (let index = 0; index < tableData.length; index=index+3) {\r\n                    newData.push(                                \r\n                        <div key={this.state.data[index].team.displayName} className=\"flexcontainer\">\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index]}\r\n                            </table>\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index+1]}\r\n                            </table>\r\n                            <table className=\"card-table-team\">\r\n                                {tableData[index+2]}\r\n                            </table>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                return (\r\n                    <div className=''> \r\n                        {newData}\r\n                    </div>\r\n                )\r\n           \r\n        }\r\n        else{\r\n        return(\r\n            <h1>Loading...</h1>\r\n        )}\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\r\n//import { UpdateScore } from './UpdateScore';\r\nimport './Rankings.css';\r\n\r\nexport class ScheduleTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state = {\r\n\t\t\tteam: props.team,\r\n\t\t\ttitle: props.title,\r\n            id: props.id,\r\n            matchups: [],\r\n            loading: true,\r\n            sport: props.sport,\r\n            league: props.league,\r\n            homeScores: [],\r\n            awayScores: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateSchedule();\r\n    }\r\n\r\n    populateSchedule = () => { \r\n        this.setState({ matchups: [] })\r\n        fetch(`http://site.api.espn.com/apis/site/v2${window.location.pathname}`)\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n\r\n                throw new Error(\"Unable to retrieve required data from server.\");\r\n            })\r\n            .then(function (data) {\r\n                let events = data.events;\r\n                var games = [];\r\n                for (var i = 0; i < events.length; i++) {\r\n                    for (var j = 0; j < events[i].competitions.length; j++) {\r\n                        games.push(events[i].competitions[j]);\r\n                    }\r\n                }                \r\n                return games\r\n            })\r\n            .then(games => {\r\n                for (let index = 0; index < games.length; index++) {\r\n                    var joined = this.state.matchups.concat(games[index]);\r\n                    // var homeScores = this.state.homeScores.concat(games[index].competitors[1].score.displayValue);\r\n                    // var awayScores = this.state.awayScores.concat(games[index].competitors[0].score.displayValue);\r\n                    this.setState({ \r\n                        matchups: joined,\r\n                        // homeScores: homeScores,\r\n                        // awayScores: awayScores,\r\n                    })\r\n                }\r\n                this.setState({ loading: false })\r\n            })\r\n            .catch(function (error) {\r\n            console.log(\"Error: \", error.message);\r\n        });\r\n    }\r\n\r\n    getMatchup(x){\r\n        return this.state.matchups[x]\r\n    }\r\n\r\n    getHomeTeam(index){\r\n        return this.state.matchups[index].competitors[0]\r\n    }\r\n\r\n    getAwayTeam(index){\r\n        return this.state.matchups[index].competitors[1]\r\n    }\r\n\r\n    openToVenue(matchup){\r\n        return \"https://www.google.com/maps/search/?api=1&query=\" + matchup.venue.fullName + \" \" + matchup.venue.address.city + \" \" + matchup.venue.address.state;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading===false){\r\n            //let tableData = [];\r\n            let team1Record = '';\r\n            let team2Record = '';\r\n            //var AwayRanking;\r\n            //var HomeRanking;\r\n\r\n            // for (let x = 0; x < this.state.matchups.length; x++) {\r\n            //     if (this.state.season !== \"Off Season\") {\r\n            //         this.state.matchups[x].competitors[1].record !== undefined ? team1Record = this.state.matchups[x].competitors[1].record[0].displayValue : team1Record = \"0-0\"\r\n            //         this.state.matchups[x].competitors[0].record !== undefined ? team2Record = this.state.matchups[x].competitors[0].record[0].displayValue : team2Record = \"0-0\"\r\n            //     }\r\n            //     tableData.push(\r\n            //         <tbody className=\"scoreboard\">\r\n            //         <tr>\r\n            //             <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={this.state.matchups[x].competitors[1].team.logos[0].href}/></td>\r\n            //             {this.state.matchups[x].competitors[1].winner === true ? <td id=\"teams\"><strong>{AwayRanking} {this.state.matchups[x].competitors[1].team.displayName} <span id=\"record\">({team1Record})</span></strong></td>: <td id=\"teams\">{AwayRanking} {this.state.matchups[x].competitors[1].team.displayName} <span id=\"record\">({team1Record})</span></td>}\r\n            //             <UpdateScore index={x} teamIndex={1} sport={this.state.sport} league={this.state.league} scores={this.state.homeScores}/>\r\n            //         </tr>\r\n            //         <tr>\r\n            //             <td id=\"logo\"><img id=\"thumb\" alt=\"\" src={this.state.matchups[x].competitors[0].team.logos[0].href}/></td>\r\n            //             {this.state.matchups[x].competitors[0].winner === true ? <td id=\"teams\"><strong>{HomeRanking} {this.state.matchups[x].competitors[0].team.displayName} <span id=\"record\">({team2Record})</span></strong></td>: <td id=\"teams\">{HomeRanking} {this.state.matchups[x].competitors[0].team.displayName} <span id=\"record\">({team2Record})</span></td>}\r\n            //             <UpdateScore index={x} teamIndex={0} sport={this.state.sport} league={this.state.league} scores={this.state.awayScores}/>\r\n            //         </tr>\r\n            //         <tr>\r\n            //             <td colSpan=\"3\">{this.state.matchups[x].date}</td>\r\n            //         </tr>            \r\n            //         </tbody>\r\n            //     )   \r\n            // }\r\n\r\n            var tableData1 = []\r\n            for (let index = 0; index < this.state.matchups.length; index++) {\r\n                //var matchup = this.getMatchup[index]\r\n                var homeTeam = this.getHomeTeam(index)\r\n                var awayTeam = this.getAwayTeam(index)\r\n                //let location = this.openToVenue(matchup)\r\n                if (this.state.season !== \"Off Season\") {\r\n                    this.state.matchups[index].competitors[0].record !== undefined ? team1Record = this.state.matchups[index].competitors[1].record[0].displayValue : team1Record = \"0-0\"\r\n                    this.state.matchups[index].competitors[1].record !== undefined ? team2Record = this.state.matchups[index].competitors[0].record[0].displayValue : team2Record = \"0-0\"\r\n                }\r\n                tableData1.push(\r\n                    <tr>\r\n                        <td>{this.state.matchups[index].date.substr(0,10)}</td>\r\n                        <td id=\"logo-schedule\"><img id=\"thumb\" alt=\"logo\" src={awayTeam.team.logos[0].href}/></td>\r\n                        <td class=\"schedule\">{awayTeam.team.location} ({team2Record})</td>\r\n                        <td>@</td>\r\n                        <td id=\"logo-schedule\"><img id=\"thumb\" alt=\"logo\" src={homeTeam.team.logos[0].href}/></td>\r\n                        <td class=\"schedule\">{homeTeam.team.location} ({team1Record})</td>\r\n                    </tr>\r\n                )   \r\n            }\r\n\r\n            return (\r\n                <div className=\"flexcontainer\">\r\n                    <table class=\"scheduleTable\"> \r\n                        <th colSpan=\"6\">{this.state.team} Schedule</th>\r\n                        {tableData1}\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <h1>Loading...</h1>\r\n            )}\r\n    }\r\n}","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './layout';\r\nimport './App.css';\r\n//import { Scoreboard } from './Scoreboard';\r\nimport ScoreboardTable from './ScoreboardTable.js';\r\nimport RankingsTable from './Rankings.js';\r\nimport { Team } from './Team';\r\nimport {Rankings} from './Rankings'\r\nimport { ScheduleTable } from './ScheduleTable';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n      < Layout >\r\n        <Route exact path='/'>\r\n          <Team />\r\n        </Route>\r\n        <Route path='/NBA'>\r\n            <ScoreboardTable sport=\"basketball\" league=\"nba\"/>\r\n        </Route>\r\n        <Route path='/CollegeBasketball'>\r\n          <ScoreboardTable sport=\"basketball\" league=\"mens-college-basketball\" />\r\n        </Route>\r\n        <Route path='/CollegeFootball'>\r\n          <ScoreboardTable sport=\"football\" league=\"college-football\"/>\r\n        </Route>\r\n        <Route path='/NFL'>\r\n          <ScoreboardTable sport=\"football\" league=\"nfl\"/>\r\n        </Route>\r\n        <Route path='/MLB'>\r\n          <ScoreboardTable sport=\"baseball\" league=\"mlb\"/>\r\n        </Route>  \r\n        <Route path='/NHL'>\r\n          <ScoreboardTable sport=\"hockey\" league=\"nhl\"/>\r\n        </Route>   \r\n        <Route path='/MLS'>\r\n          <ScoreboardTable sport=\"soccer\" league=\"usa.1\"/>\r\n        </Route>\r\n        <Route path='/ChampionsLeague'>\r\n          <ScoreboardTable sport=\"soccer\" league=\"uefa.champions\"/>\r\n        </Route>              \r\n        <Route path='/Rankings'>\r\n          <RankingsTable  />\r\n        </Route>\r\n        <Route path='/sports/'>\r\n          <ScheduleTable />\r\n        </Route>\r\n        <br/>\r\n      </Layout >\r\n    );\r\n  }\r\n\r\n  export default App;","import 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\n\r\nReactDOM.render(<BrowserRouter basename={baseUrl}>\r\n                    <App />\r\n                </BrowserRouter>, rootElement);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}